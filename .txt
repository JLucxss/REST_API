MODULES -> divisão de seções / seperar a aplicação em modulos

CONTROLLERS -> Controlar a lógica de entrada e saída da aplicação, ou seja, receber as requisições do 
usuário, processar (ou repassar) os dados e retornar uma resposta.

SERVICES -> São componentes ussados para isolar a lógica de negócio da aplicação.
Eles são responsáveis por executtar operações complexas, manpular dados, e orquestrar regras do sistema,
deixando os controllers mais limpos e docados apenas em receber requisições e retornar respostas

Organiza o código: separa regras de negócio da lógica de requisição/resposta.

Reutilização: você pode usar os mesmos serviços em diferentes partes do sistema.

Testabilidade: fica mais fácil escrever testes automatizados para a lógica.

Manutenção: alterações na regra de negócio não afetam diretamente o controller.


Controller	                         |  Service
Recebe requisições	                 |  Executa regras de negócio
Chama services e responde ao cliente | 	Não conhece HTTP ou requisições
Foco em interface e fluxo	         |  Foco na lógica da aplicação

/////////////////////////////

CRUD -> Create, Read, Update, Delete.

Criar{
    POST/users
}
Ler{
    GET/users
    GET/users/id
}
Alterar{
    PUT/users/:id
    PATCH/users/:id
}
Excluir{
    DELETE/users/:id
}